<?xml version="1.0" encoding="UTF-8"?>
<schedule>
  <conference>
    <title>PromCon EU 2019</title>
    <start>2019-11-07</start>
    <end>2019-11-08</end>
    <days>2</days>
    <day_change>00:00</day_change>
    <timeslot_duration>00:15</timeslot_duration>
  </conference>
  <day date="2019-11-07" index="1">
    <room name="Elsewhere">
      <event id="1">
        <start>8:15</start>
        <duration>00:45</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Breakfast and Registration</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="6">
        <start>10:45</start>
        <duration>00:30</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="9">
        <start>12:15</start>
        <duration>00:15</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="13">
        <start>14:00</start>
        <duration>01:00</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Lunch</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="17">
        <start>16:30</start>
        <duration>00:30</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="19">
        <start>18:00</start>
        <duration>01:00</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="20">
        <start>19:00</start>
        <duration>2:00</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Social event @ Stiglerie, Nymphenburger Straße 3  Until Late</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
          <link href="https://goo.gl/maps/BTrDPQNW7qiKnDu29">Stiglerie, Nymphenburger Straße 3</link>
        </links>
      </event>
    </room>
    <room name="Main room">
      <event id="2">
        <start>9:00</start>
        <duration>00:15</duration>
        <room>Main room</room>
        <abstract/>
        <title>Welcome and Introduction</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="3">
        <start>9:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Migrating from Nagios to Prometheus at Runtastic</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Niko Dominkowitsch (Runtastic)</person>
        </persons>
        <description>Thinking of replacing your existing monitoring solution with Prometheus? In this talk we will show you how Runtastic moved its monitoring and alerting stack from Nagios to Prometheus. We'll show you how we managed to do this, how monitoring and alerting works with Prometheus and what challenges we were facing.  <br/>
We will cover these topics: <br/>
* How our journey started <br/>
* Using Consul for Service Discovery <br/>
* Using Terraform for managing health checks and silences for new micro services<br/>
* Building a pipeline to test and deploy alerting and recording rules automatically<br/>
* Using OpsGenie for Alert management<br/>
* Examples of common checks in Nagios and how we implemented them with Prometheus<br/>
* Examples of custom written Exporters<br/>
* Lessons Learned
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/migrating-from-nagios-to-prometheus-at-runtastic">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/niko-dominkowitsch">Niko Dominkowitsch (Runtastic)</link>
        </links>
      </event>
      <event id="4">
        <start>9:45</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Managing Grafana Dashboards with grafonnet and git</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Adam Wolfe Gordon (Digital Ocean)</person>
        </persons>
        <description>Grafana is a wonderful tool for visualizing Prometheus data. Getting started with Grafana is simple: login, create a dashboard, add some graphs, and call it a day. Come back later, add some graphs, edit some graphs, hit save and it's all live!  Flash forward a few months or years and your Grafana instance probably has tens or hundreds of dashboards. Many of them present similar data in slightly inconsistent ways. You can see who last edited a dashboard and why, but it's hard to visualize the changes they made. There's no good way to review changes before they go live like you would for any other code you write. One row on your favorite dashboard is ever so slightly taller than the others and it makes you twitch every time you notice.  At DigitalOcean we've solved these problems by storing our dashboard definitions in git, making them human-readable with grafonnet, and updating them via continuous integration. In this talk we'll describe our setup, show how it enables component re-use between dashboards, and demonstrate how it improves the ergonomics of managing Grafana dashboards at scale.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/managing-grafana-dashboards-with-grafonnet-and-git">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/adam-wolfe-gordon">Adam Wolfe Gordon (Digital Ocean)</link>
        </links>
      </event>
      <event id="5">
        <start>10:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Prometheus in Small and Medium Businesses: Why You Don't Need to Do Rocket Science (Kubernetes) to Use It</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Matteo Valentini (Nethesis)</person>
        </persons>
        <description>Prometheus, at first look, can appear very simple and at the same time very complicated, in this talk will be illustrate how a small/medium IT company can approach the deployment of the prometheus stack (Prometheus, Grafana, alertmanager and exporters), start from the local testing environment and ansible roles, to the targets labeling and exporters configurations. Will be also outlined the benefits that Prometheus can give to a company in terms of metrics visibility, the easiness to plug in new systems for generic metrics collections and the knowledge sharing, without necessary be used for monitoring dynamic and complex systems.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/prometheus-in-small-and-medium-businesses-why-you-don-t-need-to-do-rocket-science-kubernetes-to-use-it">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/matteo-valentini">Matteo Valentini (Nethesis)</link>
        </links>
      </event>
      <event id="7">
        <start>11:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>PromQL for Mere Mortals</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Ian Billett (Improbable)</person>
        </persons>
        <description>PromQL can feel intimidating at first for those new to the Prometheus ecosystem, but it is an essential skill to learn when starting out monitoring and alerting in the Prometheus ecosystem.   In this beginner-focused, demo-driven talk Ian Billett will walk through the thought processes, mental models and coping strategies he uses to tame PromQL and effectively query metrics data.   We will demystify instant vector selectors from range vector selectors, understand how aggregate functions work, and, time-permitting, even touch on some PromQL engine internals.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/promql-for-mere-mortals">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/ian-billett">Ian Billett (Improbable)</link>
        </links>
      </event>
      <event id="8">
        <start>11:45</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Managing Prometheus in a Security-focused Environment -- Linux Monitoring at HUK-COBURG</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Christian Hoffmann (HUK-COBURG)</person>
        </persons>
        <description>Prometheus offers lots of features and flexibility which often leaves newcomers with lots of open questions: Which service discovery to use? How to secure access to metrics? Which architecture to implement?  In order to provide some input back to the community, this talk will outline how we run Prometheus at HUK-COBURG in order to provide a multi-tenant turn-key monitoring experience in a security-focused environment. It covers basic decisions like scrape intervals and service discovery and extends to the implementation of encrypted and authenticated connections to monitoring targets using sshified and team-aware access to Prometheus/Grafana access via prometheus-filter-proxy.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/managing-prometheus-in-a-security-focused-environment-linux-monitoring-at-huk-coburg">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/christian-hoffmann">Christian Hoffmann (HUK-COBURG)</link>
        </links>
      </event>
      <event id="10">
        <start>12:30</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Fun and Profit with Alertmanager</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Simon Pasquier (Red Hat)</person>
        </persons>
        <description>Getting someone to know that a problem exists is the main reason why we run monitoring infrastructure. Prometheus and AlertManager are very good at it but requirements vary from person to person. In this presentation, Simon Pasquier will introduce the Prometheus alerting philosophy. Then he will discuss AlertManager's good practices and pitfalls. Finally he will show advanced use cases.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/fun-and-profit-with-alertmanager">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/simon-pasquier">Simon Pasquier (Red Hat)</link>
        </links>
      </event>
      <event id="11">
        <start>13:00</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Practical Capacity Planning Using Prometheus</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Andrew Newdigate (GitLab)</person>
        </persons>
        <description>GitLab.com’s monolithic Rails application experiences high week-on-week traffic growth. To ensure availability, GitLab’s Infrastructure team track and plan ahead in order to avoid hitting capacity limits in the application, whether these limits be CPU, database connection pools, memory, storage or any number of other finite resources. Hitting these limits could result in hours, or days, of degraded service while workarounds are put in place.  With this in mind, the team set about building a set of tools on top of Prometheus recording rules and alerts to provide them with the information they need to be sufficiently forewarned, up to a month in advance, of potential resource saturation issues.  If you’ve ever felt that you’re reactively responding to resource saturation issues, this session will provide practical examples of how we’re building a framework for resource planning into our SRE team workflow. We’ll be presenting our open-source solution and explaining how it works for us.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/practical-capacity-planning-using-prometheus">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/andrew-newdigate">Andrew Newdigate (GitLab)</link>
        </links>
      </event>
      <event id="12">
        <start>13:30</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Prometheus @ Datacenters - Or Why Modbus Is Even Worse than SNMP</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Richard "RichiH" Hartmann (SpaceNet)</person>
        </persons>
        <description>The cloud runs on servers, and those live in datacenters. Most everything in datacenters speaks ModBus/TCP; SNMP being considered too modern. Lessons learned and problems overcome along with some nice pictures.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/prometheus-datacenters-or-why-modbus-is-even-worse-than-snmp">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/richard-hartmann">Richard "RichiH" Hartmann (SpaceNet)</link>
        </links>
      </event>
      <event id="14">
        <start>15:00</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Remote Write Storage Wars</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Alejandro Cespedes (Adidas)</person>
        </persons>
        <description>Remote write storage is a hot topic, several systems existed for a few years (Cortex, M3DB, InfluxDB) and some systems have been born in the past few months (Thanos receive, VictoriaMetrics). Each system has it's own architecture and different trade-offs.  In this talk, Alejandro will present adidas findings on experiments to benchmark various remote write open source storage systems such as Cortex, M3DB, Thanos, VictoriaMetrics and others. The experiments try to benchmark scalability and elasticity of each storage system.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/remote-write-storage-wars">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/alejandro-cespedes">Alejandro Cespedes (Adidas)</link>
        </links>
      </event>
      <event id="15">
        <start>15:30</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Expectations on Remote Data</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Alfred Landrum (Sysdig)</person>
        </persons>
        <description>Prometheus's remote storage API allows PromQL evaluation to work with stores other than TSDB, and with data that may not have originated via native Prometheus scraping. PromQL has expectations about the data served by the API, which must be met in order to give a "compatible" user experience with native Prometheus.  I'll present my teams experience marrying an existing distributed time series database, originally designed around storing downsampled statsd-style metrics, with a PromQL evaluation engine. I'll cover topics including: downsampling, counter aggregation, series staleness, and others. 
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/expectations-on-remote-data">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/alfred-landrum">Alfred Landrum (Sysdig)</link>
        </links>
      </event>
      <event id="16">
        <start>16:00</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Two Households, Both Alike in Dignity: Cortex and Thanos</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Bartlomiej Plotka (Improbable)</person>
          <person>Tom Wilkie (Grafana Labs)</person>
        </persons>
        <description>Speakers: Bartlomiej Plotka and Tom Wilkie<br/>
Perhaps some of the success of the original Prometheus project can be attributed to the desire to keep it simple: no dependencies, no trendy distributed systems, a single binary with a simple mission.  This approach left some problems unsolved - how do you scale your Prometheus installation across multiple sites? How do you ensure your metrics are durably stored for long term analysis? And how do you build a monitoring system that can transparently tolerate machine failure?  In this talk, we introduce two of the most popular solutions to these problems: Cortex and Thanos. Both CNCF projects, Cortex and Thanos share many components with Prometheus, but they take a fundamentally different approach to how these pieces are joined together.  This talk will help you understand the different tradeoffs these two projects have taken, give you an understanding of where each project’s strengths lie and help you decide which of these projects is best for you.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/speakers/bartlomiej-plotka/">Bartlomiej Plotka</link>
          <link href="https://promcon.io/2019-munich/speakers/tom-wilkie/">Tom Wilkie</link>
          <link href="https://promcon.io/2019-munich/talks/two-households-both-alike-in-dignity-cortex-and-thanos">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/bartlomiej-plotka">Bartlomiej Plotka (Improbable)</link>
          <link href="https://promcon.io/2019-munich/speakers/tom-wilkie">Tom Wilkie (Grafana Labs)</link>
        </links>
      </event>
      <event id="18">
        <start>17:00</start>
        <duration>01:00</duration>
        <room>Main room</room>
        <abstract/>
        <title>Lightning Talks</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
    </room>
  </day>
  <day date="2019-11-08" index="2">
    <room name="Elsewhere">
      <event id="21">
        <start>8:30</start>
        <duration>00:45</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Breakfast</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="25">
        <start>10:45</start>
        <duration>00:30</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="28">
        <start>12:15</start>
        <duration>00:15</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="32">
        <start>14:00</start>
        <duration>01:00</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Lunch</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="35">
        <start>16:30</start>
        <duration>00:30</duration>
        <room>Elsewhere</room>
        <abstract/>
        <title>Break</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
    </room>
    <room name="Main room">
      <event id="22">
        <start>9:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Prometheus at Prezi: Replacing 10 Years of Anti-patterns</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>David Guerrero (Prezi)</person>
        </persons>
        <description>This talk goes over how our micro-services infrastructure is set up at Prezi, how it used to be monitored with convoluted and unreliable solutions, how we introduced Prometheus to all of our services, what we learned, where we failed, how it improved our engineers' life and what it enables us to do now.  We recently spent 8 months redesigning our entire monitoring infrastructure, replacing 10 years of unreliable organically grown solutions to a uniform and highly available Prometheus-based platform. Our services being mostly written in Django/Python, we spent a lot of time getting in right and contributed back to the community (see https://engineering.prezi.com/prometheus-unchained-331b7ab8737, https://github.com/prezi/django-exporter).  This was also the opportunity to revise our alerting philosophy (using the famous "My Philosophy on Alerting") and had to re-educate all of our engineers on how to alert and how to make great dashboards (or not making any and just using generic alerts and dashboards). A key point was to measure the impact of these changes by counting the alerts and how engineer react to them (was the alert actionable?). Based on that, we can see how well our practices are performing and react if necessary.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/prometheus-at-prezi-replacing-10-years-of-anti-patterns">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/david-guerrero">David Guerrero (Prezi)</link>
        </links>
      </event>
      <event id="23">
        <start>9:45</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Containing Your Cardinality</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Chris Marchbanks (Splunk)</person>
        </persons>
        <description>Spending time in the Prometheus community quickly instills a fear of high cardinality metrics; however, cardinality provides immense value for certain workloads. Learn when to use high cardinality metrics, how to reduce unnecessary cardinality, and how to find the sources of excessive cardinality in your data.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/containing-your-cardinality">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/chris-marchbanks">Chris Marchbanks (Splunk)</link>
        </links>
      </event>
      <event id="24">
        <start>10:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Monitoring Nodeless Kubernetes Workloads with Prometheus</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Madhuri Yechuri (Elotl Inc.)</person>
        </persons>
        <description>Emerging Nodeless Kubernetes solutions like virtual-kubelet and Kiyot simplify public cloud k8s node management, save cost, and improve multi-tenant security. This talk explores how Prometheus can be used to monitor Nodeless Kubernetes workloads on public cloud. Demo included.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/monitoring-nodeless-kubernetes-workloads-with-prometheus">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/madhuri-yechuri">Madhuri Yechuri (Elotl Inc.)</link>
        </links>
      </event>
      <event id="26">
        <start>11:15</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Prometheus and Jaeger: A Match Made in Heaven!</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Goutham Veeramachaneni (Grafana Labs)</person>
        </persons>
        <description>Jaeger is an OSS distributed tracing solution, also part of the CNCF. Standalone, it can add immense value but when coupled with Prometheus, there is a lot more to gain. We have leveraged Prometheus and Jaeger together to make Cortex 10x faster and we will be sharing our journey and key learnings.  With Prometheus, we have our RED dashboards that highlight which services are slow, and we then use Jaeger to drill down and investigate which functions are taking how long, if we’re making too many calls, if we could batch calls together, etc. We then verify the impact using Jaeger and Prometheus after rolling out the changes. Without our RED dashboards, it would be shooting in the dark to find out which spans/services we should look at in Jaeger. Usually the slowness occurs in only one cluster. To enable filtering of traces to only that cluster/env, we enrich the traces with the same metadata that prometheus has.  We were also seeing very slow queries once in a while that weren’t very obvious when using only dashboards. We then started logging the trace ID in our request logs. We picked the requests that took too long, and used their trace IDs to probe for issues with that particular request. While this approach works, you need a solid log aggregation system, and even then it’s not exactly easy to find the interesting traces (longest/shortest requests). We will show you how Prometheus helps by providing us exemplars that can let us directly jump to the right traces from the latency dashboards. We will end the talk by demo-ing everything discussed.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/prometheus-and-jaeger-a-match-made-in-heaven">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/goutham-veeramachaneni">Goutham Veeramachaneni (Grafana Labs)</link>
        </links>
      </event>
      <event id="27">
        <start>11:45</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Improved Alerting with Prometheus and Alertmanager</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Julien Pivotto (Inuits)</person>
        </persons>
        <description>One of the reasons we collect metrics is to be able to alert on them. This presentation will introduce you some concepts of PromQL, prometheus and alertmanager to highly improve the quality and reliability of your alerts.  This talk will cover different topic, including:  - Reducing flapping alerts - Hysteresis - "Time of the day" based alerting - Computed thresholds with data history
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/improved-alerting-with-prometheus-and-alertmanager">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/julien-pivotto">Julien Pivotto (Inuits)</link>
        </links>
      </event>
      <event id="29">
        <start>12:30</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>OpenMetrics: What Does It Mean for You</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Brian Brazil (Robust Perception)</person>
        </persons>
        <description>The OpenMetrics format intends to standardise metric exposition, making it easy for both those developing and operating systems to monitor them. It is however a new format. Will it be supported by your monitoring system? Will you need to rewrite your existing instrumentation? What's needed to transition? What about 3rd party systems you don't control? How does this differ and expand, and improve on the existing Prometheus format?  This session will cover all of these questions.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/openmetrics-what-does-it-mean-for-you">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/brian-brazil">Brian Brazil (Robust Perception)</link>
        </links>
      </event>
      <event id="30">
        <start>13:00</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>TSDB: 1 Year In</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Ganesh Vernekar (Grafana Labs)</person>
        </persons>
        <description>Since a major revamp of the Prometheus storage engine as part of the Prometheus 2.0 release, there have been a lot of enhancements and feature additions in TSDB.<br/>
In this talk I will speak about all that has gone into TSDB since 2.0 was released, some of the notable ones include:<br/>
* Backfilling<br/>
* Disk size based retention<br/>
* WAL compression and read optimizations<br/>
* Postings compression and lifting the 64 GiB index size limit to be practically unlimited<br/>
* Allocation and memory optimization for compaction<br/>
* Various optimization for the queries<br/>
* Read Only mode<br/>
* Isolation<br/>
I will also talk about how each of these developments impacted Prometheus and how devs embedding them in their own apps can leverage them.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/tsdb-1-year-in">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/ganesh-vernekar">Ganesh Vernekar (Grafana Labs)</link>
        </links>
      </event>
      <event id="31">
        <start>13:30</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>What the Fork‽ Reporting Metrics in a Multi-process Environment</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Daniel Magliola (GoCardless Ltd)</person>
        </persons>
        <description>For many years, most Ruby applications couldn't use Prometheus, because the Ruby client didn't support pre-fork servers. It turns out this wasn't solved for such a long time because it's a surprisingly hard problem. Many have tried to solve this with different approaches, but we found the best one to be the simplest. Let me show you the dark arts of inter-process communication, and how we ended up fully supporting metrics in Ruby.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/what-the-fork-reporting-metrics-in-a-multi-process-environment">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/daniel-magliola">Daniel Magliola (GoCardless Ltd)</link>
        </links>
      </event>
      <event id="33">
        <start>15:00</start>
        <duration>00:30</duration>
        <room>Main room</room>
        <abstract/>
        <title>Prometheus Histograms – Past, Present, and Future</title>
        <type>talk</type>
        <released>True</released>
        <persons>
          <person>Björn Rabenstein (Grafana Labs)</person>
        </persons>
        <description>Representing distributions in a metrics-based monitoring system is both important and hard. Doing it right unlocks many powerful use cases. What does Prometheus offer in this regard? And what are the pitfalls with the current state of the art? To help understand the present, this talk will also shed light on the past. How have the Histogram and Summary metric types become what they are today with all their weal and woe? Finally, let's have a look at the rich body of research happening in the area, and how it might benefit future versions of Prometheus.
        </description>
        <links>
          <link href="https://promcon.io/2019-munich/talks/prometheus-histograms-past-present-and-future">Talk information, slides, and video.</link>
          <link href="https://promcon.io/2019-munich/speakers/bjorn-rabenstein">Björn Rabenstein (Grafana Labs)</link>
        </links>
      </event>
      <event id="34">
        <start>15:30</start>
        <duration>01:00</duration>
        <room>Main room</room>
        <abstract/>
        <title>Panel Discussion</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="36">
        <start>17:00</start>
        <duration>01:00</duration>
        <room>Main room</room>
        <abstract/>
        <title>Lightning Talks</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
      <event id="37">
        <start>18:00</start>
        <duration>0:15</duration>
        <room>Main room</room>
        <abstract/>
        <title>Closing</title>
        <type>talk</type>
        <released>True</released>
        <persons>
        </persons>
        <description>
        </description>
        <links>
        </links>
      </event>
    </room>
  </day>
</schedule>
